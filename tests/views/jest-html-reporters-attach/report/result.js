window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":5,"numPassedTests":53,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":5,"numTotalTests":53,"startTime":1732601649761,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1732601667427,"runtime":17145,"slow":true,"start":1732601650282},"testFilePath":"C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend\\tests\\api\\auth\\master\\user.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserController","getAllStaffs"],"duration":13,"failureMessages":[],"fullName":"UserController getAllStaffs should fetch all staffs successfully","status":"passed","title":"should fetch all staffs successfully"},{"ancestorTitles":["UserController","getAllStaffs"],"duration":2,"failureMessages":[],"fullName":"UserController getAllStaffs should handle errors gracefully","status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["UserController","getAllStaffs"],"duration":1,"failureMessages":[],"fullName":"UserController getAllStaffs should handle empty staff list","status":"passed","title":"should handle empty staff list"},{"ancestorTitles":["UserController","getOneStaffs"],"duration":1,"failureMessages":[],"fullName":"UserController getOneStaffs should fetch a single staff successfully","status":"passed","title":"should fetch a single staff successfully"},{"ancestorTitles":["UserController","getOneStaffs"],"duration":2,"failureMessages":[],"fullName":"UserController getOneStaffs should handle staff not found","status":"passed","title":"should handle staff not found"},{"ancestorTitles":["UserController","getOneStaffs"],"duration":1,"failureMessages":[],"fullName":"UserController getOneStaffs should handle invalid userId in request parameters","status":"passed","title":"should handle invalid userId in request parameters"},{"ancestorTitles":["UserController","updateStaffs"],"duration":0,"failureMessages":[],"fullName":"UserController updateStaffs should update staff successfully","status":"passed","title":"should update staff successfully"},{"ancestorTitles":["UserController","updateStaffs"],"duration":0,"failureMessages":[],"fullName":"UserController updateStaffs should handle staff not found for update","status":"passed","title":"should handle staff not found for update"},{"ancestorTitles":["UserController","updateStaffs"],"duration":1,"failureMessages":[],"fullName":"UserController updateStaffs should handle missing or invalid request body","status":"passed","title":"should handle missing or invalid request body"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1732601667437,"runtime":17155,"slow":true,"start":1732601650282},"testFilePath":"C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend\\tests\\api\\auth\\master\\auth.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AuthController - login"],"duration":9,"failureMessages":[],"fullName":"AuthController - login should return a successful login response","status":"passed","title":"should return a successful login response"},{"ancestorTitles":["AuthController - login"],"duration":1,"failureMessages":[],"fullName":"AuthController - login should return an error response for invalid credentials","status":"passed","title":"should return an error response for invalid credentials"},{"ancestorTitles":["AuthController - register"],"duration":1,"failureMessages":[],"fullName":"AuthController - register should return a successful register response","status":"passed","title":"should return a successful register response"},{"ancestorTitles":["AuthController - register"],"duration":1,"failureMessages":[],"fullName":"AuthController - register should return an error response for invalid credentials","status":"passed","title":"should return an error response for invalid credentials"},{"ancestorTitles":["AuthController - password-change"],"duration":1,"failureMessages":[],"fullName":"AuthController - password-change should return a successful password-change response","status":"passed","title":"should return a successful password-change response"},{"ancestorTitles":["AuthController - password-change"],"duration":1,"failureMessages":[],"fullName":"AuthController - password-change should return an error response for invalid credentials","status":"passed","title":"should return an error response for invalid credentials"},{"ancestorTitles":["AuthController - refresh access token"],"duration":2,"failureMessages":[],"fullName":"AuthController - refresh access token should return a successful refresh the access token and return it in the response","status":"passed","title":"should return a successful refresh the access token and return it in the response"},{"ancestorTitles":["AuthController - refresh access token"],"duration":0,"failureMessages":[],"fullName":"AuthController - refresh access token should return a 403 with the correct message when token is missing","status":"passed","title":"should return a 403 with the correct message when token is missing"},{"ancestorTitles":["AuthController - logout"],"duration":1,"failureMessages":[],"fullName":"AuthController - logout should successfully log out a user and return a 200 response","status":"passed","title":"should successfully log out a user and return a 200 response"},{"ancestorTitles":["AuthController - logout"],"duration":1,"failureMessages":[],"fullName":"AuthController - logout should return an error if logout fails","status":"passed","title":"should return an error if logout fails"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1732601667464,"runtime":17182,"slow":true,"start":1732601650282},"testFilePath":"C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend\\tests\\api\\auth\\master\\role.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RoleController","getAllRoles"],"duration":10,"failureMessages":[],"fullName":"RoleController getAllRoles should fetch all roles successfully","status":"passed","title":"should fetch all roles successfully"},{"ancestorTitles":["RoleController","getAllRoles"],"duration":1,"failureMessages":[],"fullName":"RoleController getAllRoles should handle errors gracefully","status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["RoleController","getAllRoles"],"duration":1,"failureMessages":[],"fullName":"RoleController getAllRoles should handle empty role list","status":"passed","title":"should handle empty role list"},{"ancestorTitles":["RoleController","getOneRole"],"duration":1,"failureMessages":[],"fullName":"RoleController getOneRole should fetch a single role successfully","status":"passed","title":"should fetch a single role successfully"},{"ancestorTitles":["RoleController","getOneRole"],"duration":1,"failureMessages":[],"fullName":"RoleController getOneRole should handle role not found","status":"passed","title":"should handle role not found"},{"ancestorTitles":["RoleController","CreateRole"],"duration":1,"failureMessages":[],"fullName":"RoleController CreateRole should create a new role successfully","status":"passed","title":"should create a new role successfully"},{"ancestorTitles":["RoleController","CreateRole"],"duration":1,"failureMessages":[],"fullName":"RoleController CreateRole should handle duplicate role error","status":"passed","title":"should handle duplicate role error"},{"ancestorTitles":["RoleController","updateRole"],"duration":1,"failureMessages":[],"fullName":"RoleController updateRole should update a role successfully","status":"passed","title":"should update a role successfully"},{"ancestorTitles":["RoleController","updateRole"],"duration":1,"failureMessages":[],"fullName":"RoleController updateRole should handle role not found for update","status":"passed","title":"should handle role not found for update"},{"ancestorTitles":["RoleController","deleteRole"],"duration":1,"failureMessages":[],"fullName":"RoleController deleteRole should delete a role successfully","status":"passed","title":"should delete a role successfully"},{"ancestorTitles":["RoleController","deleteRole"],"duration":1,"failureMessages":[],"fullName":"RoleController deleteRole should handle role not found for deletion","status":"passed","title":"should handle role not found for deletion"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1732601667495,"runtime":17213,"slow":true,"start":1732601650282},"testFilePath":"C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend\\tests\\api\\auth\\master\\permission.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PermissionController","getAllPermissions"],"duration":13,"failureMessages":[],"fullName":"PermissionController getAllPermissions should fetch all permissions successfully","status":"passed","title":"should fetch all permissions successfully"},{"ancestorTitles":["PermissionController","getAllPermissions"],"duration":2,"failureMessages":[],"fullName":"PermissionController getAllPermissions should handle errors gracefully","status":"passed","title":"should handle errors gracefully"},{"ancestorTitles":["PermissionController","getAllPermissions"],"duration":1,"failureMessages":[],"fullName":"PermissionController getAllPermissions should handle empty permission list","status":"passed","title":"should handle empty permission list"},{"ancestorTitles":["PermissionController","CreatePermission"],"duration":1,"failureMessages":[],"fullName":"PermissionController CreatePermission should create a new permission successfully","status":"passed","title":"should create a new permission successfully"},{"ancestorTitles":["PermissionController","CreatePermission"],"duration":1,"failureMessages":[],"fullName":"PermissionController CreatePermission should handle duplicate permission error","status":"passed","title":"should handle duplicate permission error"},{"ancestorTitles":["PermissionController","getOnePermission"],"duration":1,"failureMessages":[],"fullName":"PermissionController getOnePermission should fetch a single permission successfully","status":"passed","title":"should fetch a single permission successfully"},{"ancestorTitles":["PermissionController","getOnePermission"],"duration":1,"failureMessages":[],"fullName":"PermissionController getOnePermission should handle permission not found","status":"passed","title":"should handle permission not found"},{"ancestorTitles":["PermissionController","updatePermission"],"duration":0,"failureMessages":[],"fullName":"PermissionController updatePermission should update a permission successfully","status":"passed","title":"should update a permission successfully"},{"ancestorTitles":["PermissionController","updatePermission"],"duration":1,"failureMessages":[],"fullName":"PermissionController updatePermission should handle permission not found for update","status":"passed","title":"should handle permission not found for update"},{"ancestorTitles":["PermissionController","deletePermission"],"duration":1,"failureMessages":[],"fullName":"PermissionController deletePermission should delete a permission successfully","status":"passed","title":"should delete a permission successfully"},{"ancestorTitles":["PermissionController","deletePermission"],"duration":1,"failureMessages":[],"fullName":"PermissionController deletePermission should handle permission not found for deletion","status":"passed","title":"should handle permission not found for deletion"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1732601667504,"runtime":17222,"slow":true,"start":1732601650282},"testFilePath":"C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend\\tests\\api\\auth\\master\\rolepermission.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RolePermissionController - getAllRolePermissions"],"duration":16,"failureMessages":[],"fullName":"RolePermissionController - getAllRolePermissions should return all role permissions successfully","status":"passed","title":"should return all role permissions successfully"},{"ancestorTitles":["RolePermissionController - getAllRolePermissions"],"duration":1,"failureMessages":[],"fullName":"RolePermissionController - getAllRolePermissions should return an error response if fetching fails","status":"passed","title":"should return an error response if fetching fails"},{"ancestorTitles":["RolePermissionController - setRolePermissions"],"duration":1,"failureMessages":[],"fullName":"RolePermissionController - setRolePermissions should set role permissions successfully","status":"passed","title":"should set role permissions successfully"},{"ancestorTitles":["RolePermissionController - setRolePermissions"],"duration":1,"failureMessages":[],"fullName":"RolePermissionController - setRolePermissions should return an error response if setting permissions fails","status":"passed","title":"should return an error response if setting permissions fails"},{"ancestorTitles":["RolePermissionController - getRolePermissionsById"],"duration":1,"failureMessages":[],"fullName":"RolePermissionController - getRolePermissionsById should return role permissions by ID successfully","status":"passed","title":"should return role permissions by ID successfully"},{"ancestorTitles":["RolePermissionController - getRolePermissionsById"],"duration":1,"failureMessages":[],"fullName":"RolePermissionController - getRolePermissionsById should return an error response if fetching by ID fails","status":"passed","title":"should return an error response if fetching by ID fails"},{"ancestorTitles":["RolePermissionController - updateRolePermissions"],"duration":0,"failureMessages":[],"fullName":"RolePermissionController - updateRolePermissions should update role permissions successfully","status":"passed","title":"should update role permissions successfully"},{"ancestorTitles":["RolePermissionController - updateRolePermissions"],"duration":0,"failureMessages":[],"fullName":"RolePermissionController - updateRolePermissions should return an error response if updating permissions fails","status":"passed","title":"should return an error response if updating permissions fails"},{"ancestorTitles":["RolePermissionController - deleteRolePermissions"],"duration":1,"failureMessages":[],"fullName":"RolePermissionController - deleteRolePermissions should delete role permissions successfully","status":"passed","title":"should delete role permissions successfully"},{"ancestorTitles":["RolePermissionController - deleteRolePermissions"],"duration":1,"failureMessages":[],"fullName":"RolePermissionController - deleteRolePermissions should return an error response if deleting permissions fails","status":"passed","title":"should return an error response if deleting permissions fails"},{"ancestorTitles":["RolePermissionController - getPermissionsByRole"],"duration":1,"failureMessages":[],"fullName":"RolePermissionController - getPermissionsByRole should return permissions by role successfully","status":"passed","title":"should return permissions by role successfully"},{"ancestorTitles":["RolePermissionController - getPermissionsByRole"],"duration":0,"failureMessages":[],"fullName":"RolePermissionController - getPermissionsByRole should return an error response if fetching permissions fails","status":"passed","title":"should return an error response if fetching permissions fails"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":11,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./tests/views","filename":"report.html","openReport":true}]],"rootDir":"C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend","runTestsByPath":false,"seed":-1579504980,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\HP\\Desktop\\trainee-praveen\\TSNode\\BMSBackend\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1732601667612,"_reporterOptions":{"publicPath":"./tests/views","filename":"report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})